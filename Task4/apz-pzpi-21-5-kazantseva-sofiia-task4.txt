1 ОПИС АРХІТЕКТУРИ КЛІЄНТСЬКОЇ ЧАСТИНИ

Angular обрано як основний фреймворк для розробки фронтенд частини системи. Він забезпечує швидку конфігурацію, дозволяючи швидко створювати потужні веб-додатки. Для комунікації з бекендом використовується REST API, що дозволяє виконувати запити до сервера для отримання та обробки даних. HttpClient використовується для надсилання HTTP-запитів, що забезпечує простоту та ефективність у роботі з API.
Для забезпечення багатомовності інтерфейсу використовується механізм i18n, що дозволяє легко додавати підтримку нових мов та адаптувати інтерфейс для різних регіонів. Це забезпечує можливість користувачам взаємодіяти з додатком їх рідною мовою. Усі дані в проекті обробляються з використанням кодування UTF-8. Це дозволяє коректно обробляти різноманітні символи та забезпечує сумісність з різними мовами та алфавітами. Використання ISO 8601 в проекті відповідає міжнародним стандартам та рекомендаціям, що сприяє сумісності програмного забезпечення з іншими системами та середовищами
Bootstrap обрано для створення адаптивного та зручного дизайну. Використання готових компонентів та стилів Bootstrap дозволяє швидко розробляти сучасні інтерфейси, що забезпечують приємний користувацький досвід на різних пристроях.
Для авторизації та автентифікації користувачів використовується механізм bearer токенів. JWT (JSON Web Tokens) токени зберігаються у локальному сховищі браузера після успішного входу користувача. Ці токени додаються до заголовків HTTP-запитів, що забезпечує безпеку та контроль доступу до захищених ресурсів.
Архітектура фронтенд частини побудована з урахуванням принципів модульності. Логіка додатку була поділена на кілька пакетів, їх можна наглядно розглянути на діаграмі пакетів у Додаток Б:
_components: містить всі компоненти додатку.
_models: містить всі моделі даних.
_services: містить всі сервіси для обробки бізнес-логіки та взаємодії з бекендом.
Компоненти є основними будівельними блоками інтерфейсу користувача. Вони відповідають за конкретні частини UI та містять відповідну логіку. Сервіси використовуються для обробки бізнес-логіки та взаємодії з бекендом, що дозволяє тримати компоненти чистими та простими, компоненти можна розглянути на діаграмі компонентів у Додаток В.
Для навігації між різними сторінками додатку використовується Angular Router. Маршрути визначаються у файлі маршрутизації та дозволяють визначити, які компоненти повинні завантажуватися для конкретних URL.
Дотримання принципів чистого коду та використання сучасних інструментів дозволяє створювати ефективні та підтримувані додатки. Використання Angular, HttpClient, i18n та Bootstrap забезпечує високу якість фронтенд частини системи, що легко розширюється та підтримується. Авторизація за допомогою JWT токенів гарантує належний рівень безпеки при доступі до системи.

2 ПОБУДОВА ДІАГРАМИ ПАКЕТІВ

Архітектура фронтенд частини побудована з урахуванням принципів модульності. Логіка додатку була поділена на кілька пакетів, їх можна наглядно розглянути на діаграмі пакетів у Додаток Б:
_components: містить всі компоненти додатку.
_models: містить всі моделі даних.
_services: містить всі сервіси для обробки бізнес-логіки та взаємодії з бекендом.

3 ПОБУДОВА ДІАГРАМИ ПРЕЦЕДЕНТІВ

Основний функціонал  реалізує логіку системи для розумної парковки безпілотних ваговозів, яка надає можливість ввести зручно документацію, обирати місця для паркування та відстежувати параметри ваговозів та місць у реальному часі. На діаграмі прецедентів відображено основну логіку серверної системи, функціональність системи та взаємодію користувачів з нею (див. Додаток А). Основні функції реалізовані у додатку:
–	Авторизація за допомогою OAuth2 з використанням JWT токенів, що дозволяє захищати ресурси та контролювати доступ до них з використанням токенів авторизації, що забезпечує безпеку та контроль над даними.
–	Можливість адмінів переглядати усіх водіїв та менеджерів та видаляти їх.
–	Можливість адмінів переглядати затверджених та відхилених адмінів.
–	Можливість адмінів додавати адмінів.
–	Можливість адмінів робити експорт та імпорт бази даних.
–	Можливість головного адміна переглядати історію операцій над базою даних.
–	Можливість головного адміна вказувати хост для підключення розумного пристрою до серверної частини проекту.
–	Можливість адмінів робити експорт історії операцій над базою даних у вигляді pdf файлу.
–	Можливість головного адміна затверджувати та відхиляти нових адмінів.
–	Менеджери ваговозів мають можливість додавати, переглядати та оновлювати інформацію про ваговози.
–	Менеджери парковок мають можливість додавати, переглядати та оновлювати інформацію про місця для паркування.
–	Менеджери ваговозів мають можливість створювати різних типів (паркування, завантаження, вивантаження) накладні.
–	Менеджери можуть підписувати накладні, спочатку менеджер парковки, а потім лише менеджер ваговоза.
–	Менеджери мають можливість завантажувати підписані накладні у вигляді pdf файлів.
–	Менеджери ваговозів можуть отримувати інформацію в реальному часі про показники/параметри ваговозі.
–	Менеджери парковки можуть отримувати інформацію в реальному часі про показники/параметри місць для паркування.

4 ПОБУДОВА ДІАГРАМИ ДІЯЛЬНОСТІ

Описані функції відображають основні можливості та процеси, які автоматизують  контроль за документацією та станом ваговозів та місць для паркування та запобігає надзвичайним ситуаціям, що можуть виникнути в під час паркування за допомогою розрахунку найкращого місця для паркування за допомогою параметрів та визначення кута заїзду, логіку взаємодії можна розглянути на діаграмі взаємодії у Додаток Г.

5 ПОБУДОВА ДІАГРАМИ КОМПОНЕНТІВ

Компоненти є основними будівельними блоками інтерфейсу користувача. Вони відповідають за конкретні частини UI та містять відповідну логіку. Сервіси використовуються для обробки бізнес-логіки та взаємодії з бекендом, що дозволяє тримати компоненти чистими та простими, компоненти можна розглянути на діаграмі компонентів у Додаток В.

6 СПЕЦИФІКАЦІЯ REST

Клієнти взаємодіють з сервісною частиною через REST API, надсилаючи HTTP-запити. REST API в проекті складається із 63 запитів. Кожний запит відповідає за надання даних клієнту та виконання бізнес логіки. Специфікація кожного запиту наведена у таблиці 1.

ВИСНОВКИ

Розробили та отримали навички з проектування клієнтської частини проекту за темою: «Програмна система для розумної парковки для безпілотних ваговозів». Отримали навички з проектування діаграми прецедентів, компонентів, діаграми пакетів та діаграми діяльності. У ході роботи було спроектовано сучасний, інтерактивний та безпечний інтерфейс користувача з використанням передових технологій.
Посилання на відео YouTube: https://www.youtube.com/watch?v=MYTligLp5Bs
Посилання на код GitHub: https://github.com/NureKazantsevaSofiia/apz-pzpi-21-5-kazantseva-sofiia/tree/main/Task4

ДОДАТОК А
Специфікація REST
Таблиця 1 – Специфікація REST API
Об’єкт	Метод	Посилання	Опис
Користувач	POST	/login	Вхід до системи
Всі адміни	GET	/api/admins/{admin-id}	Отримання профілю адміна
	POST	/api/admins/{admin-id}/add/{email}	Додавання адміна
	GET	/api/admins/{admin-id}/truck-managers	Отримання усіх менеджерів ваговозів
	GET	/api/admins/{admin-id}/parking-managers	Отримання усіх менеджерів парковок
	DELETE	/api/admins/{admin-id}/truck-managers/{truck-manager-id}	Видалення менеджера ваговозів
	DELETE	/api/admins/{admin-id}/parking-managers/{parking-manager-id}	Видалення менеджера парковок
	GET	/api/admins/approved	Отримання усіх затверджених адмінів
	GET	/api/admins/not-approved	Отримання усіх не затверджених адмінів
	GET	/api/admins/{admin-id}/db/export	Експорт бази даних
	POST	/api/admins/{admin-id}/db/import	Імпорт бази даних
Головний адмін	POST	/api/admins/{admin-id}/approve/{new-admin-id}	Затвердження нового адміна
	POST	/api/admins/{admin-id}/decline/{new-admin-id}	Відхилення нового адміна
	GET	/api/admins/{admin-id}/db/history	Перегляд історії операцій над базою даних
Адмін	PATCH	/api/admins/{admin-id}	Оновлення профілю адміна
Менеджер ваговозів	POST	/api/truck-manager/register	Реєстрація менеджера ваговозів
	GET	/api/truck-manager/{user-id}	Отримання профілю менеджера ваговозів
	PATCH	/api/truck-manager/{user-id}	Редагування профілю менеджера ваговозів
	DELETE	/api/truck-manager/{user-id}	Видалення менеджера ваговозів
	POST	/api/truck-manager/{user-id}/trucks	Додавання ваговозу
	GET	/api/truck-manager/{user-id}/trucks/{truck-id}	Отримання профілю ваговозу
	PATCH	/api/truck-manager/{user-id}/trucks/{truck-id}	Оновлення профілю ваговоза
	DELETE	/api/truck-manager/{user-id}/trucks/{truck-id}	Видалення ваговозу
	GET	/api/truck-manager/{user-id}/trucks	Отримання усіх ваговозів компанії
	GET	/api/truck-manager/{user-id}/trucks/without-manager	Отримання усіх ваговозів компанії без менеджера
	PATCH	/api/truck-manager/{user-id}/trucks/{truck-id}/remove-manager	Видалення менеджера ваговозу
	PATCH	/api/truck-manager/{user-id}/trucks/{truck-id}/add-manager	Додавання менеджера ваговозу
	PATCH	/api/truck-manager/{user-id}/company/{company-id}	Зміна компанії менеджера ваговозів
	GET	/api/truck-manager/{user-id}/trucks/{truck-id}/companies/{company-id}/search-place	Пошук найкращого місця для ваговозу
	POST	/api/truck-manager/{user-id}/invoices	Створення накладної
	PATCH	/api/truck-manager/{user-id}/invoices/{invoice-id}	Підписання накладної менеджером ваговозів
	GET	/api/truck-manager/{user-id}/invoices/{invoice-id}	Отримання накладної
	GET	/api/truck-manager/{user-id}/invoices	Отримання усіх накладних менеджера ваговозів
	GET	/api/truck-manager/{user-id}/invoices/truck-number/{truck-number}	Пошук накладної за номером ваговозу
	GET	/api/truck-manager/{user-id}/invoices/signed	Отримання усіх підписаних накладних
	GET	/api/truck-manager/{user-id}/invoices/not-signed-by-parking-manager	Отримання усіх не підписаних менеджером парковок накладних
	GET	/api/truck-manager/{user-id}/invoices/not-signed-by-truck-manager	Отримання усіх накладних не підписаних менеджером ваговозів
Менеджер парковок	POST	/api/parking-manager/register	Реєстрація менеджера парковок
	GET	/api/parking-manager/{user-id}	Отримання профілю менеджера парковок
	PATCH	/api/parking-manager/{user-id}	Редагування профілю менеджера парковок
	DELETE	/api/parking-manager/{user-id}	Видалення менеджера парковок
	PATCH	/api/parking-manager/{user-id}/company/{company-id}	Зміна компанії менеджера парковок
	POST	/api/parking-manager/{user-id}/parking-places	Додавання місця для паркування
	GET	/api/parking-manager/{user-id}/parking-places/{parking-place-id}	Отримання профілю місця для паркування
	PATCH	/api/parking-manager/{user-id}/parking-places/{parking-place-id}	Оновлення профілю місця паркування
	DELETE	/api/parking-manager/{user-id}/parking-places/{parking-place-id}	Видалення місця паркування
	GET	/api/parking-manager/{user-id}/parking-places	Отримання усіх місць для паркування компанії
	GET	/api/parking-manager/{user-id}/parking-places/without-manager	Отримання усіх місць для паркування без менеджера компанії
	PATCH	/api/parking-manager/{user-id}/parking-places/{parking-place-id}/remove-manager	Видалення менеджера місця для паркування
	PATCH	/api/parking-manager/{user-id}/parking-places/{parking-place-id}/add-manager	Додавання менеджера місця паркування
	PATCH	/api/parking-manager/{user-id}/invoices/{invoice-id}	Підписання накладної менеджером парковок
	GET	/api/parking-manager/{user-id}/invoices/{invoice-id}	Отримання накладної
	GET	/api/parking-manager/{user-id}/invoices	Отримання усіх накладних менеджера парковок
	GET	/api/parking-manager/{user-id}/invoices/place-number/{place-number}	Пошук накладної за номером місця паркування
	GET	/api/parking-manager/{user-id}/invoices/signed	Отримання усіх підписаних накладних
	GET	/api/parking-manager/{user-id}/invoices/not-signed-by-parking-manager	Отримання усіх не підписаних менеджером парковок накладних
	GET	/api/parking-manager/{user-id}/invoices/not-signed-by-truck-manager	Отримання усіх накладних не підписаних менеджером ваговозів
Компанія ваговозів	POST	/api/truck-company/register	Реєстрація компанії ваговозів
	GET	/api/truck-company/search	Пошук компанії ваговозів за назвою
	PATCH	/api/truck-manager/{user-id}/truck-company/{company-id}	Оновлення профілю компанії ваговозів
Компанія парковок	POST	/api/parking-company/register	Реєстрація компанії парковок
	GET	/api/parking-company/search	Пошук компанії парковок за назвою
	PATCH	/api/parking-manager/{user-id}/parking-company/{company-id}	Оновлення профілю компанії парковок
